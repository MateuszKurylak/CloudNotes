name: CloudNotes CI Pipeline

# Kiedy workflow ma być uruchamiany
on:
  push:
    branches:
      - master # Uruchom przy push do gałęzi 'main'
  pull_request:
    branches:
      - master # Uruchom przy tworzeniu/aktualizacji Pull Requesta do 'main'

jobs:
  build-and-push-images:
    runs-on: ubuntu-latest # Na jakim systemie ma działać job (runner GitHub Actions)

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4 # Akcja do pobrania kodu repozytorium

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Akcja do konfiguracji Buildx (zaawansowane budowanie Docker)

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Backend image
        uses: docker/build-push-action@v5
        with:
          context: ./app/backend # Kontekst budowania (ścieżka do Dockerfile backendu)
          file: ./app/backend/Dockerfile # Jawne wskazanie Dockerfile
          push: true # Czy wypychać obraz po zbudowaniu
          tags: | # Tagi dla obrazu backendu
            ${{ secrets.DOCKERHUB_USERNAME }}/cloudnotes-backend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/cloudnotes-backend:${{ github.sha }} 
          # github.sha to hash commita, unikalny dla każdej zmiany

      - name: Build and push Frontend image
        uses: docker/build-push-action@v5
        with:
          context: ./app/frontend
          file: ./app/frontend/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/cloudnotes-frontend:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/cloudnotes-frontend:${{ github.sha }}

      # Opcjonalny krok: Skanowanie obrazów pod kątem podatności (np. Trivy)
      # Możemy dodać to później, aby nie komplikować pierwszego workflow
      # - name: Scan Backend image with Trivy
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/cloudnotes-backend:latest'
      #     format: 'table'
      #     exit-code: '0' # Domyślnie '0' - nie przerywa pipeline'u przy znalezieniu podatności
      #                      # Można zmienić na '1' aby przerywać przy krytycznych/wysokich

      # - name: Scan Frontend image with Trivy
      #   uses: aquasecurity/trivy-action@master
      #   with:
      #     image-ref: '${{ secrets.DOCKERHUB_USERNAME }}/cloudnotes-frontend:latest'
      #     format: 'table'
      #     exit-code: '0'